<?php
/*
 -------------------------------------------------------------------------
 GLPI Inbox
 Copyright (C) 2019 by Curtis Conard
 https://github.com/cconard96/glpi-inbox
 -------------------------------------------------------------------------
 LICENSE
 This file is part of GLPI Inbox.
 GLPI Inbox is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.
 GLPI Inbox is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 You should have received a copy of the GNU General Public License
 along with GLPI Inbox. If not, see <http://www.gnu.org/licenses/>.
 --------------------------------------------------------------------------
 */

class PluginInboxNotificationSms implements NotificationInterface {

   static function check($value, $options = []) {
      return true;
   }

   static function testNotification() {
      // Nothing to test yet
   }

   function getSenderFromItem(string $itemtype, int $items_id) {
      $item = new $itemtype();
      $item->getFromDB($items_id);
      // Note that child itemtypes like followups and tasks are not used. They will always come through from their parent type.
      switch($itemtype) {
         case 'Ticket':
         case 'Change':
         case 'Problem':
            return $item->fields['users_id_recipient'];
      }
   }

   function sendNotification($options=[]) {
      $supported_itemtypes = ['Ticket', 'Change', 'Problem'];
      if (!in_array($options['_itemtype'], $supported_itemtypes)) {
         return false;
      }
      // Remove the expected footer text. It is useless garbage in this case.
      // This will not work if a custom footer or header are added.
      $expected_footer = "-- \n\n" . Html::entity_decode_deep(__('Automatically generated by GLPI'));
      $message = str_replace($expected_footer, '', $options['content_text']);
      $message = trim($message);
      PluginInboxMessage::sendMessage($options['to'], [
         'users_id_sender' => $this->getSenderFromItem($options['_itemtype'], $options['_items_id']),
         'subject'         => $options['subject'],
         'message'         => $message,
         'itemtype'        => $options['_itemtype'],
         'items_id'        => $options['_items_id']
      ]);
      return true;
   }
}